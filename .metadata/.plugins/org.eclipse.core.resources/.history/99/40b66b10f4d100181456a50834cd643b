package 백준1539;

import java.util.ArrayList;
import java.util.Scanner;

public class Main {
	private int h[];
	private static ArrayList<Integer> arr = new ArrayList<>();

	
	public int lowerBound(ArrayList<Integer> al, int first, int end, int key) {
		//lower bound는 찾고자 하는 값 이상이 처음 나타나는 위치
		while (first < end) {
			int mid = (first + end) /2;
			if (al.get(mid) < key)
				first = mid + 1;
			else
				end = mid;

		}
		return end;
	}

	public int getHeight(int node) {
		int lb, left, right, size = arr.size();
		lb = lowerBound(arr, 0, size, node);
		left = lb > 0 ? h[arr.get(lb - 1)] : 0;
		right = lb < size ? h[arr.get(lb)] : 0;

		h[node] = Math.max(left, right) + 1;
		arr.add(lb, node);
		return h[node];
	}
	
	public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		Main m = new Main();
		int sum = 0;
		int n = sc.nextInt();
		m.h = new int[n];
		for (int i = 0; i < n; i++) {
			sum += m.getHeight(sc.nextInt());
		}
		System.out.println(sum);

	}

	

}