package 알고리즘_이진Tree;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	int cntArr[];
	int key;
	Main left;
	Main right;
	Main rootNode;
	int cnt = -1;
	int i=-1;
	StringBuilder sb = new StringBuilder();
	
	public Main insertKey(Main T, int x) {
		cnt++;
		if (T == null) {
			Main newNode = new Main();
			newNode.key = x;
			return newNode;
		} else if (x < T.key) {
			T.left = insertKey(T.left, x);
			return T;
		} else if (x > T.key) {
			T.right = insertKey(T.right, x);
			return T;
		} else {
			return T;
		}
	}

	public void insert(int x) {
		
		i++;
		rootNode = insertKey(rootNode, x);
		cntArr[i]=cnt;
		sb.append(cnt+"\n");
	}

	public static void main(String args[]) throws NumberFormatException, IOException {
		StringBuilder sb = new StringBuilder();
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Main T = new Main();

		int N = Integer.parseInt(br.readLine().trim());
		T.cntArr = new int[N];
		for (int i = 0; i < N; i++) {
			T.insert(Integer.parseInt(br.readLine().trim()));
		}
		for(int i=0;i<T.cntArr.length;i++)
		System.out.println(T.cntArr[i]);
System.out.println(sb);
	}
}
