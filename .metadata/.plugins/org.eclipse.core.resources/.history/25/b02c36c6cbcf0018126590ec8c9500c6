package 백준2957;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

	static int cnt = 0;
	StringBuilder sb = new StringBuilder();

	static int[] binaryTree = new int[300001];


	private static void insert(int num, int idx) {
		cnt++;
		if (num < binaryTree[idx]) { // 새로 들어온 숫자가 노드보다 작다면
			if (binaryTree[idx * 2] == 0) { // 왼쪽 자식이 없다면
				binaryTree[idx * 2] = num;
			} else {
				insert(num, idx * 2);
			}
		} else if (num > binaryTree[idx]) { // 새로 들어온 숫자가 노드보다 크다면
			if (binaryTree[idx * 2 + 1] == 0) { // 오른쪽 자식이 있다면
				binaryTree[idx * 2 + 1] = num;
			} else {
				insert(num, idx * 2 + 1);
			}
		}
	}

	public static void main(String args[]) throws NumberFormatException, IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Main T = new Main();
		T.sb.append(cnt + "\n");
		int N = Integer.parseInt(br.readLine().trim());
		for (int i = 0; i < N; i++) {
			if(i==0) {
				binaryTree[0] = Integer.parseInt(br.readLine().trim());
			}
			else {
				
			insert(Integer.parseInt(br.readLine().trim()),1);
			T.sb.append(cnt + "\n");
		}}
		System.out.println(T.sb);
	}

}
